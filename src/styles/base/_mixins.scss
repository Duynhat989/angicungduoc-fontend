:root {
    --font_family: 'Josefin Sans', sans-serif;
    --color_border: #e0e0e0;
    --color_main: #4a90e2;
    --color_menu: #333;
    --bgk_menu: #fff;
    --color_body: #f4f4f4;
    --color_primary: #e94e77;
    --background_title_top: #f8f8f8;
    --color_text_header: #555;
    --color_text_header_hover: #888;
    --color_text_accent: #9b59b6;
    --color_text_accent_hover: #8e44ad;
    --background_button: #2ecc71;
    --color_text_button: #fff;
    --background_button_hover: #27ae60;
    --color_text_desc: #7f8c8d;
    --color_title_footer: #bdc3c7;
    --color_text_footer: #7f8c8d;
    --color_border_footer: #bdc3c7;
  }
  
$font_family: var(--font_family);
$color_border: var(--color_border);
$font_family : var(--font_family);
$color_main : var(--color_main);
$color_menu : var(--color_menu);
$bgk_menu : var(--bgk_menu);
$color_body : var(--color_body);
$color_primary : var(--color_primary);
$background_title_top : var(--background_title_top);
$color_text_header : var(--color_text_header);
$color_text_header_hover : var(--color_text_header_hover);
$color_text_accent : var(--color_text_accent);
$color_text_accent_hover : var(--color_text_accent_hover);
$background_button : var(--background_button);
$color_text_button : var(--color_text_button);
$background_button_hover : var(--background_button_hover);
$color_text_desc : var(--color_text_desc);
$color_title_footer : var(--color_title_footer);
$color_text_footer : var(--color_text_footer);
$color_border : var(--color_border);
$color_border_footer : var(--color_border_footer);
/* dùng cho một vài thuộc tính riêng cho trình duyện VD: transition, box-shadow */
@mixin css3($atribute, $params) {
	#{$atribute}: #{$params};
	-webkit-#{$atribute}: #{$params};
	-khtml-#{$atribute}: #{$params};
	-moz-#{$atribute}: #{$params};
	-ms-#{$atribute}: #{$params};
	-o-#{$atribute}: #{$params};
}
/* căn giữa chiều dọc và ngang trên 1 box */
@mixin center_element($height) {
	display: grid;
    place-items: center;
    height: #{$height};
}
/* background opacity */
@mixin bg-opacity($color, $opacity) {
	position: relative;
	&:before {
		content: "";
		top: 0; 
		left: 0;
		right: 0;
		bottom: 0;
		background: #{$color};
		opacity: #{$opacity};
		position: absolute;
	}
}
@mixin flex($align, $justify) {
    display: flex;
	align-items: $align;
	justify-content: $justify;
}
@mixin webkit-box($number) {
	display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $number;
    overflow: hidden;
}

// 3. Breakpoints
$breakpoints: (se: 375px, xs: 480px, sm: 576px, md: 768px, lg: 992px, xm: 1024px, xl: 1200px, xxl: 1600px, xlst: 1920px);
$max-breakpoints: (se: 374px, xs: 479px, sm: 575px, md: 767px, lg: 991px, xl: 1199px, xxl: 1599px);

// Use @include mq(lg, 'max') for max-width or @include mq(lg)

@mixin mq($mq-breakpoint, $mq-width: 'min-width', $mq-breakpoints: $breakpoints) {
    @if $mq-width == 'max' {
        $mq-width: 'max-width';
        $mq-breakpoints: $max-breakpoints;
    }

    // If $mq-breakpoint is a key that exists in this
    @if map-has-key($mq-breakpoints, $mq-breakpoint) {
        $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);
    }

    @media (#{$mq-width}: #{$mq-breakpoint}) {
        @content;
    }
}

@mixin scroll_bar {
	$scrollbar_color: $color_main !default;
	$scrollbar_bg: #ccc !default;
	scrollbar-color: $scrollbar_color $scrollbar_bg;
	scrollbar-width: thin;

	scrollbar-face-color: $scrollbar_color;
	scrollbar-track-color: $scrollbar_bg;
	&::-webkit-scrollbar {
	    width: 5px;
	    height: 5px;
	}
	&::-webkit-scrollbar-track {
	    background: $scrollbar_bg; 
	}
	&::-webkit-scrollbar-thumb {
	    background: $scrollbar_color;
	}
	&::-webkit-scrollbar-thumb:hover {
	    background: #68767b; 
	}
}
